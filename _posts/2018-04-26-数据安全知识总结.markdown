---
layout: post
title:  "数据安全知识总结"
date:   2018-04-26 下午11:20
categories: jekyll update
---

[视频链接](https://ke.qq.com/webcourse/index.html#course_id=282768&term_id=100334804&taid=1860274890231952&vid=v1424q06o70)

[视频链接](https://ke.qq.com/webcourse/index.html#course_id=282768&term_id=100334804&taid=1860274890231952&vid=v1424q06o70)

## Base64 编码

* 说明
1. HTTP将Base64编码用于基本的认证和摘要认证；
2. 其可以方便的将用户的任何输入（文本、图片、音频、视频）转换成只包含特定字符的安全格式，服务于网络通信过程。

* 特点
1. 可以将任意的二进制数据进行Base64编码；
2. 所有的数据都能被编码为并只用65个字符就能表示的文本文件；
3. 编码后的65个字符包括 A~Z，a~z，0~9，+，/，=;
4. 对文件或字符串进行Base64编码后将比原始大小增加33%；
5. 能够逆运算；
6. 不够安全，但却被很多加密算法作为编码方式。

如下图：
![](https://upload-images.jianshu.io/upload_images/548341-b6df40ce4e819d7b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)

## 常见的安全处理机制
* 单向散列函数 MD5、SHA1、SHA256、SHA512等；
* 消息认证码 HMAC-MD5、HMAC-SHA1
* 对称加密 DES、3DES、AES（高级加密标准）
* 非对称加密 RSA
* 数字签名
* 证书

## 对消息加密解密的两种处理方式
1. 只需保存一个值，保证该值的机密性，而不需要知道原文；
2. 除了保证机密性外还需要对该值进行解密得到消息原文。

## 单向散列函数

* 性质
1. 对任意长度的消息散列得到散列值是定长的；
2. 散列计算速度快，非常高效；
3. 消息不同，则散列值一定不同；
4. 消息相同，则散列值一定相同；
5. 具备单向性，无法逆推计算。
* 说明
1. 单向散列函数也称为消息摘要函数、哈希函数或者杂凑函数；
2. 单向散列函数输出的散列值又称为消息摘要或者指纹。
* 经典算法
MD4、MD5、SHA1、SHA256、SHA512等。

## MD5
* MD5简单说明
1. MD5是由Rivest于1991年设计的单向散列函数；
2. 全称是Message Digest Algorithm 5， 译为“消息摘要算法第5版”。
* MD5的特点
1. 对输入信息生成唯一的128位散列值（32个字符）
2. 明文不同，则散列值一定不同；
3. 明文相同，则散列值一定相同。
4. 根据输出值，不能得到原始的明文，即其过程不可逆。

* MD5的应用
1. 加密；
2. 搜索；
3. 文件完整性验证。

* 安全性
1. MD5 解密网站：http://www.cmd5.com
2. MD5的强抗碰撞性已经被证实攻破，即对于重要数据不应该再继续使用MD5加密。
3. 可以对MD5稍作改进，增加解密难度，加盐。

## 对称加密

* 对称加密的特点
1. 加密/解密使用相同的密钥；
2. 加密和解密的过程是可逆的。

![](https://upload-images.jianshu.io/upload_images/548341-9bf511c1ce5f5192.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)

* 经典算法
1. DES 数据加密标准；
2. 3DES 使用3个密钥；
3. AES 高级加密标准。

## 非对称加密

* 非对称加密的特点
1. 使用公钥加密，使用私钥解密；
2. 公钥是公开的，私钥保密；
3. 加密处理安全，但是性能极差。

如图，
![](https://upload-images.jianshu.io/upload_images/548341-44382277e5a7cb1d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)

* 经典算法 - RSA

[李永乐老师讲解RAS算法]([https://m.weibo.cn/2141823055/4234550026956367](https://m.weibo.cn/2141823055/4234550026956367)
)

## 中间人攻击和数字证书
[视频链接](https://ke.qq.com/webcourse/index.html#course_id=282768&term_id=100334804&taid=1860270595264656&vid=h1424up0cne)  
数字证书：本质上是公钥，还包括权威CA对该公钥的数字签名    
数字证书 = 公钥 + 数字签名（第三方机构签）

## 总结

![](https://upload-images.jianshu.io/upload_images/548341-ca99343d1a0e5540.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)
![](https://upload-images.jianshu.io/upload_images/548341-0317a8dde66eaa8d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)

## SSL 和 TLS

>"SSL": 是Secure Sockets Layer 的缩写，翻译为中文叫做安全套接字层，上世纪90年代由网景公司设计。HTTP协议在传输数据的时候是明文传输的，可能存在数据泄露（被嗅探）和篡改的问题，而SSL协议就是为了解决上述问题而提出的。
> “TLS”：到了1999年，SSL因为应用广泛，已经成为互联网上的事实标准。TETF就在那年把SSL标准化。标准化之后的名称改为TLS（Transport Layer Security），中文叫做“传输层安全协议”，所以SSL和TLS可以视作同一个东西的不同阶段。
>"HTTPS": = HTTP + TLS

## HTTPS协议中关于SSL/TLS层握手过程的说明

### 阶段一：协商加密方式等参数
客户端：
>1. 我想要和你[服务端]进行安全通话，我这里支持的对称加密算法有DES、AES、RC5，密钥交换算法有RSA和DH，消息摘要算法有MD5和SHA1、SHA256；

服务端
>1. 我们使用AES-RSA-SHA256的组合方式吧；
>2. 服务器端证书发送给客户端，并说[这是我的证书，里面有我的信息和公钥，你拿去验证一下我的身份吧]。

该阶段双方已经协商好了加密【AES】，会话密钥交换【RSA】，消息校验【SHA256】的一套方法。

### 阶段二：验证证书的有效性并交换会话密钥

客户端
>1. 检查证书上面的信息，并通过已有的CA证书验证服务器证书的真实性，如果有误则发出警告并断开连接；
>2. 客户端从接收到的证书中提取出公钥；
>3. 生成随机数作为会话密钥，即 session key，该密钥将被在建立安全通道后用作对称加密的密钥；
>4. 使用提取出来的公钥加密之前生成的会话密钥，封装成一个ClientKeyExchange消息【其实就是使用公钥对会话密钥进行加密之后的密文】；
>5. 以后我就要使用session key对消息进行加密来和你进行通信了。

服务端
>1. 使用自己的私钥对收到ClientKeyExchange消息进行解密，得到会话密钥，即session key；
>2. 使用会话密钥加密初始化向量，如果采用的是CBC分组模式进行加密处理则需要用到初始向量；
>3. 加密HMAC的密钥；
>4. 以后我也要使用session key 对消息进行加密来和你进行通信了！

该阶段完成会话密钥session key的安全交换。

### 阶段三：使用会话密钥加密消息，所有的消息在安全的信道中传输

客户端
>1. 要发送给服务端的消息是CMsg：我的小秘密是......；
>2. 使用会话密钥对CMsg进行对称加密得到密文CMsg1：xxxxx；
>3. 把CMsg1发送给服务器端。

服务端
>1. 接收到客户端发送来的消息CMsg1：xxxxx；
>2. 使用本地的会话密钥对收到的消息CMsg1进行解密，得到原文为CMsg：我的小秘密是......；
>3. 对客户端的消息进行响应，要发送给客户端的消息为SMsg: 其他人不会听到的，我也有个小秘密......；
>4. 使用会话密钥对SMsg进行对称加密得到密文SMsg1：......；
>5. 把SMsg1发送给客户端。

该阶段在传输之前使用会话密钥对所有的消息进行对称加密处理。



















